/*
 * The MIT License
 *
 * Copyright 2020 Monica Ranchos y Luis Pérez.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.mycompany.farmacia.simple.vistas;

import com.mycompany.farmacia.simple.controladores.Auth;
import com.mycompany.farmacia.simple.controladores.Operaciones;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import jiconfont.icons.font_awesome.FontAwesome;
import jiconfont.swing.IconFontSwing;

/**
 *
 * @author Monica Ranchos y Luis Pérez
 */
public class FrmEmpleados extends javax.swing.JFrame {

    DefaultTableModel modelo = new DefaultTableModel();
    private Connection conn;
    Operaciones ops;
    ArrayList<String> perfiles = new ArrayList();
    Auth auth = new Auth();
    String queryAll = "SELECT p.pk_empleado,p.nombres,p.apellidos,p.usuario,rb.nombre"
            + " FROM empleados p INNER JOIN perfiles rb ON p.fk_perfil = rb.pk_perfiles;";

    public void setConn(Connection conn) {
        this.conn = conn;
    }
    
    public void setColumns(){
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellidos");
        modelo.addColumn("Usuario");
        modelo.addColumn("Perfil");
    }
    /**
     * Creates new form FrmProveedores
     * @param cn
     */
    public FrmEmpleados(Connection cn, String empleado) {
        this.conn = cn;
        this.ops = new Operaciones(conn);
        IconFontSwing.register(FontAwesome.getIconFont());
        Icon iconNew = IconFontSwing.buildIcon(FontAwesome.USER_PLUS, 15);
        Icon iconSave = IconFontSwing.buildIcon(FontAwesome.FLOPPY_O, 15);
        Icon iconSearch = IconFontSwing.buildIcon(FontAwesome.SEARCH, 15);
        Icon iconDelete = IconFontSwing.buildIcon(FontAwesome.USER_TIMES, 15);
        Icon iconChange = IconFontSwing.buildIcon(FontAwesome.LOCK, 15);
        initComponents();
        btnNuevo.setIcon(iconNew);
        btnGuardar.setIcon(iconSave);
        btnBuscar.setIcon(iconSearch);
        btnEliminar.setIcon(iconDelete);
        btnCambiar.setIcon(iconChange);
        tblClientes.setModel(modelo);
        setColumns();
        ops.consultaGenerica(modelo, queryAll);
        perfiles = ops.getPerfiles();
        for(Object perfil : perfiles){
            cmbPerfil.addItem(perfil.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNombres = new javax.swing.JLabel();
        lblApellidos = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        lblClave = new javax.swing.JLabel();
        lblPerfil = new javax.swing.JLabel();
        cmbPerfil = new javax.swing.JComboBox<>();
        lblBuscar = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        txtClave = new javax.swing.JPasswordField();
        btnCambiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Empleados");
        setResizable(false);

        lblNombres.setText("Nombres");

        lblApellidos.setText("Apellidos");

        lblUsuario.setText("Usuario");

        txtNombres.setEnabled(false);

        txtApellidos.setEnabled(false);
        txtApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidosActionPerformed(evt);
            }
        });

        txtUsuario.setEnabled(false);
        txtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblClientes);

        lblClave.setText("Clave");

        lblPerfil.setText("Perfil");

        lblBuscar.setText("Buscar");

        txtClave.setEnabled(false);

        btnCambiar.setText("Cambiar Clave");
        btnCambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombres)
                            .addComponent(lblApellidos)
                            .addComponent(lblUsuario)
                            .addComponent(lblClave)
                            .addComponent(lblPerfil)
                            .addComponent(lblBuscar))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombres)
                            .addComponent(txtApellidos)
                            .addComponent(txtUsuario)
                            .addComponent(cmbPerfil, 0, 271, Short.MAX_VALUE)
                            .addComponent(txtBuscar)
                            .addComponent(txtClave)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCambiar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNuevo)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombres))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblApellidos))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsuario))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblClave)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPerfil)
                    .addComponent(cmbPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBuscar)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnGuardar)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnCambiar))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidosActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        habilitarTextos(true);
        if (btnGuardar.getText().equals("Editar")){
            btnGuardar.setText("Guardar");
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void habilitarTextos(boolean pass){
        txtNombres.setEnabled(true);
        txtNombres.grabFocus();
        txtApellidos.setEnabled(true);
        txtUsuario.setEnabled(true);
        txtClave.setEnabled(pass);
    }
    private void limpiarTextos(){
        txtNombres.setText("");
        txtApellidos.setText("");
        txtUsuario.setText("");
        txtBuscar.setText("");
        txtClave.setText("");
    }
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling
        String query, nombre, apellidos, usuario, clave, perfil;
        nombre = txtNombres.getText();
        apellidos = txtApellidos.getText();
        usuario = txtUsuario.getText();
        clave = auth.hash_pass(String.valueOf(txtClave.getPassword()));
        perfil = cmbPerfil.getSelectedItem().toString();
        if (btnGuardar.getText().equals("Guardar")){
            String fk_perfil = "SELECT * from perfiles where nombre='"+perfil+"';";
            query = "INSERT INTO empleados (nombre,apellidos,usuario,clave,fk_perfil) values ('"
                +nombre+"','"+apellidos+"','"+usuario+"','"+clave+"',("+fk_perfil+"));";
            ops.Insertar(query, "Empleado Agregado");
            limpiarTextos();
            modelo.setNumRows(0);
            ops.consultaGenerica(modelo, queryAll);
            txtNombres.setEnabled(false);
            txtApellidos.setEnabled(false);
            txtUsuario.setEnabled(false);
            txtBuscar.setEnabled(true);
        }
        if (btnGuardar.getText().equals("Editar")){
            Integer pk = Integer.parseInt(tblClientes.getValueAt(tblClientes.getSelectedRow(), 0).toString());
            query = "UPDATE empleados set nombre='"+nombre+"',apellidos='"+apellidos+"',usuario='"+usuario+"','"+perfil+"' where pk_empleado="+pk+";";
            System.out.println(query);
            ops.actualizarRegistro(query, "Empleado Editado");
            limpiarTextos();
            modelo.setNumRows(0);
            ops.consultaGenerica(modelo, queryAll);
            txtNombres.setEnabled(false);
            txtApellidos.setEnabled(false);
            txtUsuario.setEnabled(false);
            txtBuscar.setEnabled(true);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        String query = "delete from empleados where nombre='"+txtNombres.getText()+"';";
        ops.actualizarRegistro(query, "Empleado Eliminado");
        limpiarTextos();
        modelo.setNumRows(0);
        ops.consultaGenerica(modelo, queryAll);
        txtNombres.setEnabled(false);
        txtApellidos.setEnabled(false);
        txtUsuario.setEnabled(false);
        txtBuscar.setEnabled(true);
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsuarioActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        String word = txtBuscar.getText();
        setColumns();
        ArrayList<String> columnas = new ArrayList<String>(Arrays.asList("ID","Nombres","Apellidos","Usuario","Perfil"));
        modelo = ops.Buscar(columnas, "empleados", "nombre", word);
        tblClientes.setModel(modelo);
        limpiarTextos();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tblClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientesMouseClicked
        // TODO add your handling code here:
        Integer fila_seleccionada = tblClientes.getSelectedRow();
        txtNombres.setText(tblClientes.getValueAt(fila_seleccionada, 1).toString());
        txtApellidos.setText(tblClientes.getValueAt(fila_seleccionada, 2).toString());
        txtUsuario.setText(tblClientes.getValueAt(fila_seleccionada, 3).toString());
        habilitarTextos(false);
        btnGuardar.setText("Editar");
    }//GEN-LAST:event_tblClientesMouseClicked

    private void btnCambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarActionPerformed
        // TODO add your handling code here:
        JPasswordField passField = new JPasswordField();
        JPasswordField passFieldConfirm = new JPasswordField();
        String message = "Por favor ingresa la nueva clave 2 veces";
        int result = JOptionPane.showOptionDialog(rootPane, new Object[] {message, passField, passFieldConfirm},
        "Cambio de Clave", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (result == JOptionPane.OK_OPTION){
            if(passField.getPassword().equals(passFieldConfirm.getPassword())){
                String clave = auth.hash_pass(String.valueOf(txtClave.getPassword()));
                //String query = "UPDATE empleados set clave="+clave+" where pk_empleado="+pk+";";
            } else {
                JOptionPane.showMessageDialog(rootPane, "Clave no coincide");
            }
        }
    }//GEN-LAST:event_btnCambiarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCambiar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cmbPerfil;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblApellidos;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblClave;
    private javax.swing.JLabel lblNombres;
    private javax.swing.JLabel lblPerfil;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JPasswordField txtClave;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
